// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Notification {
  id          String    @id
  recipientId String
  content     String
  category    String
  readAt      DateTime?
  canceledAt  DateTime?
  createdAt   DateTime  @default(now())

  @@index([recipientId])
  @@map("notification")
}

model User {
  id       String @id
  email    String @unique
  password String
  name     String

  @@map("user")
}

model Transaction {
  id                    String                   @id
  customerId            String
  paymentMethod         String
  message               String?
  status                Int?
  transactionToken      String?
  installments          Int                      @default(1)
  discount              Decimal?
  description           String?
  tid                   String?
  authorizationCode     String?
  pixQrCode             String?
  pixKey                String?
  idTransactionSafe2Pay String?
  canceledAt            DateTime?
  createdAt             DateTime                 @default(now())
  customer              Customer                 @relation(fields: [customerId], references: [identity])
  products              ProductsOnTransactions[]
  tickets               Ticket[]

  @@map("transaction")
}

model TransactionUnsuccessfully {
  id            String                   @id
  customerId    String
  paymentMethod String
  message       String?
  errorCode     String?
  createdAt     DateTime                 @default(now())
  customer      Customer                 @relation(fields: [customerId], references: [identity])
  products      ProductsOnTransactions[]

  @@map("transaction_unsuccessfully")
}

model Product {
  id           String                   @id
  description  String
  price        Int
  transactions ProductsOnTransactions[]
  Ticket       Ticket[]

  @@map("product")
}

model ProductsOnTransactions {
  transaction                 Transaction                @relation(fields: [transactionId], references: [id])
  transactionId               String
  product                     Product                    @relation(fields: [productId], references: [id])
  productId                   String
  TransactionUnsuccessfully   TransactionUnsuccessfully? @relation(fields: [transactionUnsuccessfullyId], references: [id])
  transactionUnsuccessfullyId String?

  @@id([transactionId, productId])
  @@map("products_on_transactions")
}

model Customer {
  email                      String
  identity                   String                      @id @unique
  name                       String
  phone                      String
  category                   String
  addressCity                String
  addressComplement          String
  addressDistrict            String
  addressNumber              String
  addressStateInitials       String
  addressStreet              String
  addressZipCode             String
  transactions               Transaction[]
  unsuccessfullyTransactions TransactionUnsuccessfully[]

  @@map("customer")
}

model Ticket {
  id            String      @id
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId String
  productId     String
  product       Product     @relation(fields: [productId], references: [id])
}
